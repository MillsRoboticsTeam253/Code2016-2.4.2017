// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc253.Code2016.subsystems;

import org.usfirst.frc253.Code2016.Robot;
import org.usfirst.frc253.Code2016.commands.StraightDrive;

import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.interfaces.Gyro;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class SensorData extends Subsystem {

	Ultrasonic ultraLeft;
	Ultrasonic ultraRight;
	DigitalInput photo;
	Gyro gyro1;

    public void initDefaultCommand() {

    }

    	public SensorData() {
        	super();
        	GearAutoCorrect();
        	GearStop();
        	gyro1 = new AnalogGyro(0);
//        	AutoGyroLeft();
//        	AutoGyroRight();
//        	AutoStop();
    	}
    	public void GearAutoCorrect(){
    		ultraLeft = new Ultrasonic(0,1);
        	ultraRight = new Ultrasonic(5,6);
        	ultraLeft.setAutomaticMode(true);
        	ultraRight.setAutomaticMode(true);
        	photo = new DigitalInput(4);
    		double rangeLeft = ultraLeft.getRangeInches();
        	double rangeRight = ultraRight.getRangeInches();
        	boolean isGearAligned = photo.get();
        	boolean isRobotAligned = false;
        	SmartDashboard.putBoolean("Is the robot aligned?", isRobotAligned);
        	SmartDashboard.putBoolean("Is the gear vertically aligned?", isGearAligned);
        	
        	if(isGearAligned == false){
        		if(Math.abs(rangeLeft - rangeRight) < 3.0){
        			isRobotAligned = true;
        			GearStop();
        		} else {
        			isRobotAligned = false;
        			if(rangeLeft > rangeRight){
        				Robot.drivetraintank.setLeft_Back(.5);
            	    	Robot.drivetraintank.setLeft(.5);
        			} else {
            	    	Robot.drivetraintank.setRight(.5);
            	    	Robot.drivetraintank.setRight_Back(.5);
        			}
        		}
        	} else {
        		if(Math.abs(rangeLeft - rangeRight) < 5.0 && Math.abs(rangeLeft - rangeRight) > 3.0){
        			isRobotAligned = true;
        			GearStop();
        		} else {
        			if(rangeLeft > rangeRight){
        				if(Math.abs(rangeLeft - rangeRight) > 5.0){
        					Robot.drivetraintank.setLeft_Back(.5);
                	    	Robot.drivetraintank.setLeft(.5);
        				} else {
        					Robot.drivetraintank.setRight(.5);
                	    	Robot.drivetraintank.setRight_Back(.5);
        				}
        			} else {
        				if(Math.abs(rangeLeft - rangeRight) > 5.0){
        					Robot.drivetraintank.setRight(.5);
                	    	Robot.drivetraintank.setRight_Back(.5);
        				} else {
        					Robot.drivetraintank.setLeft_Back(.5);
                	    	Robot.drivetraintank.setLeft(.5);
        				}
        			}
        		}
        	}
    	}
    	public void GearStop(){
    		Robot.drivetraintank.setLeft_Back(0);
        	Robot.drivetraintank.setLeft(0);
        	Robot.drivetraintank.setRight(0);
        	Robot.drivetraintank.setRight_Back(0);
    	}
//    	public void AutoGyroLeft(){
//    		double gyroAngle = gyro1.getAngle();
//    		Timer myTimer = new Timer();
//        	
//        	myTimer.start();
//        	if(myTimer.get() < 2.5){
//        		new StraightDrive();
//        	}
//        	myTimer.stop();
//        	myTimer.reset();
//        	
//        	while(gyroAngle < 45){
//        		new SpinClockwise();
//        	}
//        	
//        	myTimer.start();
//        	if(myTimer.get() < 1.0){
//        		new StraightDrive();
//        	}
//        	myTimer.stop();
//        	myTimer.reset();
//        	
////        	new GearAutoCorrect(); //may or may not use
//        	
//        	myTimer.start();
//        	if(myTimer.get() < 0.5){
//        		new DeployGear();
//        	} else if(myTimer.get() < 1.0){
//        		new Retract();
//        	}
//        	myTimer.stop();
//        	myTimer.reset();
//        	AutoStop();
//    	}
//    	public void AutoGyroRight(){
//    		double gyroAngle = gyro1.getAngle();
//        	Timer myTimer = new Timer();
//        	
//        	myTimer.start();
//        	if(myTimer.get() < 2.5){
//        		new StraightDrive();
//        	}
//        	myTimer.stop();
//        	myTimer.reset();
//        	
//        	while(gyroAngle < -45){ //might be 45
//        		new SpinCounterwise();
//        	}
//        	
//        	myTimer.start();
//        	if(myTimer.get() < 1.0){
//        		new StraightDrive();
//        	}
//        	myTimer.stop();
//        	myTimer.reset();
//        	
////        	new GearAutoCorrect(); //may or may not use
//        	
//        	myTimer.start();
//        	if(myTimer.get() < 0.5){
//        		new DeployGear();
//        	} else if(myTimer.get() < 1.0){
//        		new Retract();
//        	}
//        	myTimer.stop();
//        	myTimer.reset();
//        	AutoStop();
//    	}
//    	public void AutoStop(){
//    		Robot.drivetraintank.setLeft_Back(0);
//        	Robot.drivetraintank.setLeft(0);
//        	Robot.drivetraintank.setRight(0);
//        	Robot.drivetraintank.setRight_Back(0);
//        	Robot.gearFlip.FullStop();
//    	}
}



